<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.5.RELEASE</version>
  </parent>
  <groupId>com.pth.ifow</groupId>
  <artifactId>iflow</artifactId>
  <version>0.0.1</version>
  <packaging>pom</packaging>
  <modules>
  	<module>common</module>
  	<module>core</module>
  	<module>profile</module>
  	<module>workflow</module>
  	<module>backend</module>
  	<module>gui</module>
  </modules>

  <properties>
    <!-- the .root props are only needed for the db-create profile --> 
	    <ifw.module.db.database>iflow</ifw.module.db.database>
	    <ifw.module.db.root.database>iflow</ifw.module.db.root.database>
	    <ifw.module.db.root>postgres</ifw.module.db.root>
	    <ifw.module.db.root.pwd>7342</ifw.module.db.root.pwd>
	    <ifw.module.db.owner>iflow</ifw.module.db.owner>
	    <ifw.module.db.owner.password>iflow</ifw.module.db.owner.password>
	    <ifw.module.db.url>jdbc:postgresql://localhost:5432/</ifw.module.db.url>
	    <ifw.module.db.driver>org.postgresql.Driver</ifw.module.db.driver>
     
    <!-- Only run SQL stuff on core and tasks projects. Default to TRUE to skip execution of db-create and/or db-clean -->
    <ifw.module.db.skip>true</ifw.module.db.skip>
    <maven.gitcommitid.skip>true</maven.gitcommitid.skip>

    <failIfNoTests>no</failIfNoTests>
    
    <spring.boot.version>2.1.6.RELEASE</spring.boot.version>

  </properties>

  <profiles>
	
    <profile>
      <!-- runs all migratrion scripts and by default creates the needed schema/db if still missing -->
      <id>migrate-db</id>
      <activation>
        <property>
          <name>!env.mdm_skip_migrate_db</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- semi-automatic migration of DB -->
          <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- default is pre-integration-test but some of our unit test go to the DB -->
                <phase>process-test-resources</phase>
                <goals>
                  <goal>info</goal>
                  <goal>migrate</goal>
                  <goal>info</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- set this to default, for otherwise its executed in all modules and parent pom - and needs the password etc causing a failure 
                activate it only for the modules that have their own DB, e.g. core and tasks -->
              <skip>true</skip>
              <!-- otherwise we get the warning: Unable to restore connection to having no default schema: -->
              <url>${ifw.module.db.url}${ifw.module.db.database}</url>
              <user>${ifw.module.db.owner}</user>
              <password>${ifw.module.db.owner.password}</password>
              <locations>
                <location>filesystem:${basedir}/database/flyway/one-time</location>
                <location>filesystem:${basedir}/database/flyway/all-time</location>
              </locations>

              <sqlMigrationPrefix>V</sqlMigrationPrefix>
              <repeatableSqlMigrationPrefix>R</repeatableSqlMigrationPrefix>
              <sqlMigrationSeparator>_</sqlMigrationSeparator>
              <sqlMigrationSuffixes>
                <sqlMigrationSuffix>.sql</sqlMigrationSuffix>
              </sqlMigrationSuffixes>
              <encoding>UTF-8</encoding>
              <outOfOrder>false</outOfOrder>
              <validateOnMigrate>true</validateOnMigrate>
              <cleanOnValidationError>false</cleanOnValidationError>
              <mixed>false</mixed>
              <group>false</group>
              <ignoreMissingMigrations>false</ignoreMissingMigrations>
              <ignoreFutureMigrations>false</ignoreFutureMigrations>
              <cleanDisabled>true</cleanDisabled>
              <baselineOnMigrate>false</baselineOnMigrate>
              <baselineVersion>1</baselineVersion>
              <baselineDescription>Initial version</baselineDescription>
              <installedBy>system</installedBy>

            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- drops all objects from the DB -->
      <!-- must be executed "alone", ie:  mvn  -P db-clean -->
      <id>db-clean</id>
      <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>

            <dependencies>              
				<dependency>
				    <groupId>mysql</groupId>
				    <artifactId>mysql-connector-java</artifactId>
				    <version>8.0.17</version>
				</dependency>
              
            </dependencies>

            <executions>
              <execution>
                <id>db-clean</id>
                <!-- although we only need this before the test phase, i bind it to the process-resouces phase so we dont have to compile 1st 
                  when we just want to drop the DB -->
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <skip>${ifw.module.db.skip}</skip>
                  <driver>${ifw.module.db.driver}</driver>
                  <url>${ifw.module.db.url}${ifw.module.db.root.database}</url>
                  <username>${ifw.module.db.root}</username>
                  <password>${ifw.module.db.root.pwd}</password>
    
                  <!-- avoid transaction because DROP DATABASE can not run within a transaction -->
                  <autocommit>true</autocommit>
                  <sqlCommand><!-- prevent autoformat from formatting this text node: -->
                  <![CDATA[ 
                    DROP DATABASE IF EXISTS ${ifw.module.db.database};
                    DROP USER IF EXISTS ${ifw.module.db.user};
                  ]]>
                  </sqlCommand>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
	
    <profile>
      <id>db-create</id>
      <!-- TODO: rename this to db-recreate -->
      <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>

            <dependencies>              
				<dependency>
				    <groupId>mysql</groupId>
				    <artifactId>mysql-connector-java</artifactId>
				    <version>8.0.17</version>
				</dependency>
              
            </dependencies>
    
            <!-- common configuration shared by all executions -->
            <configuration>
              <skip>${ifw.module.db.skip}</skip>
              <driver>${ifw.module.db.driver}</driver>
              <url>${ifw.module.db.url}${ifw.module.db.root.database}</url>
              <username>${ifw.module.db.root}</username>
              <password>${ifw.module.db.root.pwd}</password>
            </configuration>

            <executions>
              <execution>
                <id>db-create-copy-sql-scripts1</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <!-- specific configuration for this execution -->
                <configuration>
                
                  <!-- avoid transaction because DROP DATABASE can not run within a transaction -->
                  <autocommit>true</autocommit>
                  <sqlCommand><!-- prevent autoformat from formatting this text node: -->
                  <![CDATA[ 
                    DROP DATABASE IF EXISTS ${ifw.module.db.database};
                    DROP USER IF EXISTS ${ifw.module.db.user};
                    CREATE USER ${ifw.module.db.user} IDENTIFIED BY '${ifw.module.db.user.password}';
                    CREATE DATABASE ${ifw.module.db.database} character set UTF8 collate utf8_bin;
                    GRANT ALL PRIVILEGES ON ${ifw.module.db.database}.* TO '${ifw.module.db.user}';
                  ]]>
                  </sqlCommand>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
	
    <profile>
      <id>e2eBasic</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <mdm.tests.skip>true</mdm.tests.skip>
      </properties>
      <build>
        <defaultGoal>verify</defaultGoal>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes>
                <include>**/basic/BasicE2eTest.java</include>
              </includes>
            </configuration>
          </plugin>

        </plugins>
      </build>
    </profile>
	
	</profiles>
	<build>	
	
		<plugins>
		
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<configuration>
					<skip>true</skip>              
			    </configuration>
			</plugin>
	
	  </plugins>
	  
    <pluginManagement>
      <plugins>
        <plugin>
          <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <versionRange>[5.0.7,)</versionRange>
                    <goals>
                      <goal>info</goal>
                      <goal>migrate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <skip>${mdm.tests.skip}</skip>
            <excludes>
              <!-- exclude howto tests by default -->
              <exclude>**/*HowtoTest.java</exclude>
              <!-- exclude e2e tests by default -->
              <exclude>**/*E2eTest.java</exclude>
              <exclude>**/e2e/*.java</exclude>
              <exclude>**/publish/**.java</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <!-- use case: i want my test resources next to my classes in the navigator -->
              <id>copy-test-resources-from-src_main-too</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                <resources>
                  <resource>
                    <directory>src/test/java</directory>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- needed to get the version from POM in tag.sh -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

      </plugins>
    </pluginManagement>
    	</build>
</project>